#!/bin/bash

# Frontend Configuration Update Script
# This script updates the React app configuration with your deployed backend URL

set -e

echo "🔧 Updating React app configuration for production..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Get EC2 public IP (if instance exists)
echo -e "${YELLOW}🔍 Looking for existing EC2 instance...${NC}"
PUBLIC_IP=$(aws ec2 describe-instances \
    --filters "Name=tag:Name,Values=asset-management" "Name=instance-state-name,Values=running" \
    --query 'Reservations[*].Instances[*].PublicIpAddress' \
    --output text 2>/dev/null || echo "")

if [ -z "$PUBLIC_IP" ]; then
    echo -e "${YELLOW}⚠️  No running EC2 instance found.${NC}"
    echo -e "${YELLOW}📝 Please enter your backend URL (e.g., https://api.yourdomain.com or http://YOUR_IP:5002):${NC}"
    read -p "Backend URL: " BACKEND_URL
else
    echo -e "${GREEN}✅ Found EC2 instance with IP: $PUBLIC_IP${NC}"
    BACKEND_URL="http://$PUBLIC_IP:5002"
    echo -e "${YELLOW}📝 Using backend URL: $BACKEND_URL${NC}"
    echo -e "${YELLOW}📝 If you have a custom domain, enter it instead (or press Enter to use IP):${NC}"
    read -p "Custom backend URL (optional): " CUSTOM_URL
    if [ ! -z "$CUSTOM_URL" ]; then
        BACKEND_URL="$CUSTOM_URL"
    fi
fi

# Ensure URL has protocol
if [[ ! "$BACKEND_URL" =~ ^https?:// ]]; then
    BACKEND_URL="http://$BACKEND_URL"
fi

# Ensure URL has /api suffix
if [[ ! "$BACKEND_URL" =~ /api$ ]]; then
    BACKEND_URL="$BACKEND_URL/api"
fi

echo -e "${GREEN}✅ Using backend URL: $BACKEND_URL${NC}"

# Create production environment file
echo -e "${YELLOW}📝 Creating .env.production file...${NC}"
cat > frontend/.env.production << EOF
# Production Environment Variables for React App
# Generated by update-frontend-config.sh

# API Configuration
REACT_APP_API_URL=$BACKEND_URL

# Environment
REACT_APP_ENV=production

# Feature Flags
REACT_APP_ENABLE_LOGGING=false
REACT_APP_ENABLE_ANALYTICS=true

# Build Configuration
GENERATE_SOURCEMAP=false
EOF

echo -e "${GREEN}✅ Created frontend/.env.production${NC}"

# Create development environment file
echo -e "${YELLOW}📝 Creating .env.development file...${NC}"
cat > frontend/.env.development << EOF
# Development Environment Variables for React App
# Generated by update-frontend-config.sh

# API Configuration
REACT_APP_API_URL=http://localhost:5002/api

# Environment
REACT_APP_ENV=development

# Feature Flags
REACT_APP_ENABLE_LOGGING=true
REACT_APP_ENABLE_ANALYTICS=false

# Build Configuration
GENERATE_SOURCEMAP=true
EOF

echo -e "${GREEN}✅ Created frontend/.env.development${NC}"

# Update config.js with the new URL
echo -e "${YELLOW}📝 Updating config.js...${NC}"
sed -i.bak "s|https://your-backend-domain.com/api|$BACKEND_URL|g" frontend/src/config/config.js
echo -e "${GREEN}✅ Updated frontend/src/config/config.js${NC}"

# Test the configuration
echo -e "${YELLOW}🧪 Testing configuration...${NC}"
cd frontend
if npm run build > /dev/null 2>&1; then
    echo -e "${GREEN}✅ Build test successful${NC}"
else
    echo -e "${RED}❌ Build test failed${NC}"
    echo -e "${YELLOW}📝 Please check your configuration and try again${NC}"
fi
cd ..

echo -e "${GREEN}🎉 Frontend configuration updated successfully!${NC}"
echo ""
echo -e "${YELLOW}📝 Summary:${NC}"
echo "Backend URL: $BACKEND_URL"
echo "Production env: frontend/.env.production"
echo "Development env: frontend/.env.development"
echo ""
echo -e "${YELLOW}📝 Next steps:${NC}"
echo "1. Review the generated .env files"
echo "2. Run 'npm run build' in the frontend directory"
echo "3. Deploy your updated frontend"
echo "4. Test the application with the new backend URL"
